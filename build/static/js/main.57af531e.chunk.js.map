{"version":3,"sources":["Spinner.gif","images/backTop.png","components/BackTop.js","components/UsersPage.js","images/homePage.png","components/FriendsList.js","components/UserInfo.js","App.js","reportWebVitals.js","index.js"],"names":["BackTop","src","backTop","alt","className","onClick","window","scrollTo","top","behavior","UsersPage","users","isLoading","useState","search","setSearch","navigate","useNavigate","type","placeholder","onChange","e","target","value","filter","title","toLowerCase","includes","map","user","imageUrl","id","state","userIndex","prefix","name","lastName","Spinner","FriendsList","history","friends","setFriends","setIsLoading","currentPage","size","pageTracker","setPageTracker","useEffect","axios","get","then","res","prev","data","list","console","log","onscroll","innerHeight","document","documentElement","scrollTop","offsetHeight","view","friend","UserInfo","location","useLocation","singleUser","setSingleUser","setHistory","email","ip","jobArea","jobType","company","suffix","address","city","country","streetAddress","zipCode","App","setUsers","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.57af531e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Spinner.f53aa23f.gif\";","export default __webpack_public_path__ + \"static/media/backTop.e0402307.png\";","import React from 'react'\nimport backTop from '../images/backTop.png'\n\nfunction BackTop() {\n    \n    // Moves user to the very top of the page\n    const backToTop = () => {\n        window.scrollTo({top: 0, behavior: \"smooth\"})\n    }\n\n    return (\n        <div>\n            <img src={backTop} alt=\"arrow pointing upwards\" className=\"top-button\" onClick={backToTop} />\n        </div>\n    )\n}\n\nexport default BackTop\n","import React, { useState } from 'react';\nimport Spinner from '../Spinner.gif';\nimport { useNavigate } from 'react-router-dom';\nimport BackTop from './BackTop';\n\nfunction UsersPage({ users, isLoading }) {\n\nconst[search, setSearch] = useState('');\nconst navigate = useNavigate();\n\n\nreturn (\n    <div className=\"usersContainer\">\n        <input type=\"text\" placeholder=\"Search by job title!\" className=\"inputSearch\" onChange={(e) => setSearch(e.target.value)}/>\n        <BackTop />\n\n            <div className=\"usersPage\">\n                {users && users.filter((value) => { // checks if the value given in the search input is the same as the job title\n                    if (search === '') {\n                        return value;\n                    }\n\n                    else if (value.title.toLowerCase().includes(search.toLowerCase())) {\n                        return value;\n                    }\n\n                }).map((user) => // maps through the users\n                        <div className=\"userList\" key={ user.id }>\n                                <img className=\"animalImage\" src={ user.imageUrl + \"/\" + user.id } onClick={() => navigate(\"/UserInfo\", {state: { \n                                    userIndex: user.id }}) } alt=\"animal\" /> {/* navigates to the user's profile and passes down its id value */}\n\n                                <h3 onClick={() => navigate(\"/UserInfo\", {state: { \n                                    userIndex: user.id }\n                                    })}>{ user.prefix + \" \" + user.name + \" \" + user.lastName }</h3>\n\n                                <h4>{ user.title }</h4>\n                        </div>\n                )}\n\n            {isLoading && <img className=\"spinnerGif\" src={ Spinner } alt=\"Loading...\" />} {/* shows the loading gif whenever isLoading is true */}\n        </div>\n    </div>\n  )\n}\n\nexport default UsersPage\n","export default __webpack_public_path__ + \"static/media/homePage.28346a67.png\";","import React, { useState, useEffect } from 'react'\nimport Spinner from '../Spinner.gif';\nimport axios from 'axios'\nimport { useNavigate } from 'react-router-dom';\nimport BackTop from './BackTop';\n\nfunction FriendsList({ userIndex, history }) {\n\n    const[friends, setFriends] = useState([]);\n    const[isLoading, setIsLoading] = useState(true);\n    const[pageTracker, setPageTracker] = useState({\n        currentPage: 1,\n        size: 20,\n      })\n\n    const navigate = useNavigate();\n\n\n    useEffect(() => {\n        axios.get(`http://sweeftdigital-intern.eu-central-1.elasticbeanstalk.com/user/${userIndex}/friends/${pageTracker.currentPage}/20`)\n          .then((res) => {\n              setFriends((prev) => [...prev, ...res.data.list])\n              setIsLoading(false)\n              \n              console.log(res.data)\n          })\n      }, [pageTracker]) // eslint-disable-line react-hooks/exhaustive-deps\n\n\n      window.onscroll = () => {\n        const bottomPosition = window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight;\n    \n        if (bottomPosition) {\n            setIsLoading(true)\n            \n            setPageTracker({\n              ...pageTracker,\n              currentPage: pageTracker.currentPage + 1\n            })\n        }\n      }\n      \n\n    return (\n        <div className=\"friendsList\">\n            <div className=\"historySection\">\n                {history.map((view) =>\n                    <div className=\"historyContainer\" key={ view.id }>\n                        <p className=\"viewHistory\" onClick={() => navigate(\"/UserInfo\", {state: {userIndex: view.id}})} >{ view.prefix + \" \" + view.name + \" \" + view.lastName }</p> {/* navigates to the user's profile and passes down its value */}\n                        <p> { '>' } </p>\n                    </div> )}\n            </div>\n\n            <h1>Friends:</h1>\n            <BackTop />\n\n            <div className=\"usersPage\">\n\n                {friends && friends.map((friend) => \n                    <div className=\"userList\" key={ friend.id }>\n\n                        <img className=\"animalImage\" src={ friend.imageUrl + \"/\" + friend.id } onClick={() => navigate(\"/UserInfo\", {state: { \n                                userIndex: friend.id }\n                                })} alt=\"animal\" /> {/* navigates to the user's profile and passes down its id value */}\n                        \n                        <h3 onClick={() => navigate(\"/UserInfo\", {state: { \n                                userIndex: friend.id }\n                                })}>{ friend.prefix + \" \" + friend.name + \" \" + friend.lastName }</h3>   \n\n                        <h4>{ friend.title }</h4>      \n                    </div>\n                )}\n\n                {isLoading && <img className=\"spinnerGif\" src={ Spinner } alt=\"Loading...\" />}\n            </div>\n        </div>\n    )\n}\n\nexport default FriendsList\n","import React, { useState, useEffect } from 'react'\nimport Spinner from '../Spinner.gif';\nimport axios from 'axios';\nimport homePage from '../images/homePage.png'\nimport { useLocation } from 'react-router-dom'\nimport FriendsList from './FriendsList';\n\nfunction UserInfo() {\n\n    const location = useLocation(); // \"catches\" the property of id we passed down using useNavigate() in UsersPage\n    const[singleUser, setSingleUser] = useState({});\n    const[isLoading, setIsLoading] = useState(true); \n    const[history, setHistory] = useState([]); // keeps track of the profiles the user viewed\n\nuseEffect(() => {\n    axios.get(`http://sweeftdigital-intern.eu-central-1.elasticbeanstalk.com/user/${location.state.userIndex}`)\n      .then((res) => {\n          setSingleUser(res.data)\n          setIsLoading(false)\n          setHistory((prev) => [...prev, res.data]) // adds new data to the view history while also keeping the previous ones\n\n          console.log(res.data)\n      })\n  }, [location.state.userIndex]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (!isLoading) {\n    return (\n        <div>\n            {singleUser && <div className=\"mainInfoContainer\">\n                <img className=\"personalPageImage\" src={ singleUser.imageUrl + \"/\" + singleUser.id } alt=\"animal\" />\n\n                <div className=\"fieldContainer\">\n                    <fieldset className=\"infoField\">\n                        <legend>Info</legend>\n                        <h3 className=\"userName\">{ singleUser.prefix + \" \" + singleUser.name + \" \" + singleUser.lastName}</h3>\n                        <h3 className=\"positionTitle\">{ singleUser.title }</h3>\n                        <h3 className=\"personalInfo\">Email: { singleUser.email }</h3>\n                        <h3 className=\"personalInfo\">IP Address: { singleUser.ip }</h3>\n                        <h3 className=\"personalInfo\">Job Area: { singleUser.jobArea }</h3>\n                        <h3 className=\"personalInfo\">Job Type: { singleUser.jobType }</h3>\n                    </fieldset>\n\n                    <fieldset className=\"addressField\">\n                        <legend>Address</legend>\n                        <h3>{ singleUser.company.name + \" \" + singleUser.company.suffix }</h3>\n                        <h3 className=\"personalInfo\">City: { singleUser.address.city }</h3>\n                        <h3 className=\"personalInfo\">Country: { singleUser.address.country }</h3>\n                        <h3 className=\"personalInfo\">State: { singleUser.address.state }</h3>\n                        <h3 className=\"personalInfo\">Street Address: { singleUser.address.streetAddress }</h3>\n                        <h3 className=\"personalInfo\">ZIP: { singleUser.address.zipCode }</h3>\n                    </fieldset>\n                </div>\n            </div>}\n            \n            <FriendsList userIndex={ singleUser.id } key={ singleUser.id } history={ history } /> {/* The friends list component */}\n        </div>\n    )\n  }\n  \n  else {\n    return <img className=\"spinnerGif\" src={ Spinner } alt=\"Loading...\" />\n  }\n}\n\n\nexport default UserInfo\n","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Route, Routes, HashRouter } from 'react-router-dom';\nimport UsersPage from './components/UsersPage';\nimport UserInfo from './components/UserInfo';\n\nfunction App() {\n\n  const[users, setUsers] = useState([]);\n  const[isLoading, setIsLoading] = useState(true);\n\n  const[pageTracker, setPageTracker] = useState({ // keeps track of page numbers\n    currentPage: 1,\n    size: 20,\n  })\n\n\n  useEffect(() => {\n    axios.get(`http://sweeftdigital-intern.eu-central-1.elasticbeanstalk.com/user/${pageTracker.currentPage}/20`)\n      .then((res) => {\n          setUsers((prev) => [...prev, ...res.data.list]) // adds information to the array while also keeping the previous ones\n          setIsLoading(false)\n          \n          console.log(res.data)\n      })\n  }, [pageTracker])\n\n\n  window.onscroll = () => { // page number increments when user reaches the bottom of the page\n    const bottomPosition = window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight; // bottom reached.\n\n    if (bottomPosition) {\n        setIsLoading(true) // we set isLoading to true before useState() function sets it to false once again (once the new data is fetched)\n        \n        setPageTracker({\n          ...pageTracker,\n          currentPage: pageTracker.currentPage + 1\n        })\n    }\n  }\n\n\n  return (\n    <HashRouter>\n      <div className=\"App\">\n\n        <Routes>\n          <Route path=\"/\" element={<UsersPage users={users} isLoading={isLoading} />} />\n          <Route path=\"/UserInfo\" element={<UserInfo />} />\n        </Routes>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}